{"version":3,"sources":["logo.svg","components/Navbar/Navbar.js","components/Section/Section.js","components/MainSection/MainSection.js","components/Sidebar/Sidebar.js","components/Hero/Hero.js","components/Footer/Footer.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","Section","image","title","ends","alt","src","MainSection","useState","bundles","setBundles","useEffect","a","allBundles","fetch","response","json","svBundles","arrItems","arrBundles","Object","entries","map","value","push","val","bund","bundle","index","thumbnail_url","name","ends_at","Sidebar","min","max","Math","floor","random","Hero","time","setTime","curHr","Date","getHours","Footer","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7724426c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react'\nimport '../../styles/navbar.css'\n\nconst Navbar = () => {\n    return (\n        <div className = \"navbar-container\">\n            <ul>\n                <li className=\"nav-item\">\n                    <a href=\"#\"> Inicio </a>\n                </li>\n                <li className=\"nav-item\">\n                    <a href=\"#\"> Contenido </a>\n                </li>\n                <li className=\"nav-item\">\n                    <a href=\"#\"> Categorias </a>\n                </li>\n                <li className=\"nav-item\">\n                    <a href=\"#\"> Interes </a>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport '../../styles/section.css'\n\nconst Section = ({image, title, ends}) => {\n    return (\n        <section className=\"section-container\">\n            <img className=\"section-img\" alt=\"sectionIMG\" src={image} />\n\n            <div className=\"section-data\">\n            <h4 className=\"article-title\">{title}</h4>\n                <p className=\"article-info\">\n                    Termina el: {ends}\n                </p>\n            </div>\n            \n        </section>\n    )\n}\n\nexport default Section\n","import React, {useEffect, useState} from 'react'\nimport '../../styles/mainSection.css'\nimport Section from '../Section/Section'\n\nconst MainSection = () => {\n\n    const [bundles, setBundles] = useState([])\n    useEffect(async () => {\n    const allBundles = async () => {\n        let response = await fetch(\"https://humble-bundles1.p.rapidapi.com/bundles\", {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": \"humble-bundles1.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"25d9ffe169msh5423d23e9d8ac05p1189efjsnf71e043df5e9\"\n            }\n        })\n\n        return await response.json()\n    }\n\n  \n    let svBundles = await allBundles()\n    let arrItems = []\n    let arrBundles = []\n\n    Object.entries(svBundles.bundles).map(([key, value]) => {\n        arrItems.push(value)\n    })\n\n    arrItems.map((val) => {\n        val.map((bund) => {\n            arrBundles.push(bund)\n        })\n    })\n\n    \n    setBundles(arrBundles)\n\n    }, [])\n\n    return (\n        <div className = \"main-container\">\n            {\n                bundles ? \n                \n                bundles.map((bundle, index) => {\n                    return (\n                        <Section \n                    key={index}\n                    image = {bundle.thumbnail_url}\n                    title = {bundle.name}\n                    ends = {bundle.ends_at}\n\n                    />\n                    )\n                })\n                : \n                <div>No se encontro informaci√≥n</div>\n            }\n        </div>\n    )\n}\n\nexport default MainSection\n","import Reactm, {useState, useEffect} from 'react'\nimport '../../styles/sidebar.css'\nimport Section from '../Section/Section'\n\nconst Sidebar = () => {\n\n    const [bundles, setBundles] = useState([])\n\n    const getRandomInt = (min, max) => {\n        return Math.floor(Math.random() * (max - min)) + min;\n      }\n\n    useEffect(async () => {\n    const allBundles = async () => {\n        let response = await fetch(\"https://humble-bundles1.p.rapidapi.com/bundles\", {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": \"humble-bundles1.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"25d9ffe169msh5423d23e9d8ac05p1189efjsnf71e043df5e9\"\n            }\n        })\n\n        return await response.json()\n    }\n\n  \n    let svBundles = await allBundles()\n    let arrItems = []\n    let arrBundles = []\n\n    Object.entries(svBundles.bundles).map(([key, value]) => {\n        arrItems.push(value)\n    })\n\n    arrItems.map((val) => {\n        val.map((bund) => {\n            arrBundles.push(bund)\n        })\n    })\n\n    setBundles(arrBundles[getRandomInt(1, 10)])\n\n    }, [])\n\n\n    return (\n        <div className = \"side-container\">\n            <div className = \"side-content\">\n                <h2>Contenidos mas vistos:</h2>\n                <ul>\n                    <li>Primer contenido</li>\n                    <li>Segundo contenido</li>\n                    <li>Tercero contenido</li>\n                    <li>Cuarto contenido</li>\n                </ul>\n            </div>\n\n            <div className=\"side-most-value\">\n                <h2>Contenido mas votado:</h2>\n                {\n                    bundles ? \n\n                    <Section \n                        image = {bundles.thumbnail_url}\n                        title = {bundles.name}\n                        ends = {bundles.ends_at}\n                    />\n                      \n                    :\n                    null\n                }\n            </div>\n\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React, {useState, useEffect} from 'react'\nimport '../../styles/hero.css'\n\nconst Hero = () => {\n\n    const [time, setTime] = useState(\"\")\n\n    var today = new Date()\n    var curHr = today.getHours()\n\n    useEffect(() => {\n        if (curHr < 12) {\n            setTime(\"¬°Buenos d√≠as!\")\n\n          } else if (curHr < 20) {\n            setTime(\"¬°Buenas tardes!\")\n            \n          } else {\n            setTime(\"¬°Buenas noches!\")\n          }\n    }, [])\n\n    return (\n        <header className = \"hero-container\">\n            <h1 className = \"hero-title\">{time}</h1>\n            <p className=\"title-description\">Encuentra los nuevos bundles de</p>\n            <a className=\"humble-bundle\" href=\"https://www.humblebundle.com/bundles?hmb_source=navbar\">Humble bundle</a>\n        </header>\n    )\n}\n\nexport default Hero\n","import React from 'react'\nimport '../../styles/footer.css'\n\nconst Footer = () => {\n    return (\n        <div className = \"footer-container\">\n            <h2 className=\"footer-title\">¬°Gracias por tu visita!</h2>\n\n            <div className=\"about-us\">\n                <h4>Acerca de nosotros</h4>\n                <ul>\n                    <li><a>Conocenos</a></li>\n                    <li><a>Acerca de</a></li>\n                </ul>\n            </div>\n            <div className=\"contact\">\n            \n            <h4>Contacto</h4>\n                <ul>\n                    <li><a href=\"#\">FAQ</a></li>\n                    <li><a href=\"#\">Contacto</a></li>\n                </ul>\n            </div>\n\n            <div className=\"copyright\">\n            <h3 className=\"copyright-title\">COPYRIGHT</h3>\n            <p>TODOS LOS DERECHOS RESERVADOS &copy;</p>\n            <p>Web creada por: <strong>Pablo Hern√°ndez Castillo</strong></p>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport './styles/app.css'\nimport MainSection from './components/MainSection/MainSection';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Hero from './components/Hero/Hero'\nimport Footer from './components/Footer/Footer';\n\nfunction App() {\n  return (\n    <div>\n      <Hero />\n      <div className=\"app-container\">\n        <Navbar />\n        <MainSection />\n        <Sidebar />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}